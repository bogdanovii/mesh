class Printer{
  private:
    TriDeSetka* setka;
    std::string vtkFilename;

    //идет ли запись сейчас
    bool isWriting_vtk;

    const bool print_VTK_header(const std::string vtkFilename){
      std::vector<std::string> zapis;
      //vtk DataFile Version
      zapis.push_back("# vtk DataFile Version 3.0");
      //info about data
      zapis.push_back("Generated by mfem-seismo\n");
      //The file format
      zapis.push_back("ASCII");
      //dataset structure
      zapis.push_back("DATASET UNSTRUCTURED_GRID");

      const bool res{writeFile(vtkFilename, zapis)};
      return res;
    }


  public:

    Printer(TriDeSetka* setk){
      isWriting_vtk = false;
      this->setka = setk;
    }

    const bool print_Paralepip(const std::string filename){
      isWriting_vtk = true;
      vtkFilename = filename;
      std::vector<std::string> zapis;
      const bool r1 = reWriteFile(this->vtkFilename, zapis);
      const bool r2 = print_VTK_header(this->vtkFilename);

      isWriting_vtk = false;
      return true;

    }
};
